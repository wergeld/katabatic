<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Demo | katabatic</title>
    <link>/categories/demo/</link>
      <atom:link href="/categories/demo/index.xml" rel="self" type="application/rss+xml" />
    <description>Demo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2020</copyright><lastBuildDate>Sat, 08 Feb 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Demo</title>
      <link>/categories/demo/</link>
    </image>
    
    <item>
      <title>HighCharts And Number Series</title>
      <link>/post/highcharts-and-number-series/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/highcharts-and-number-series/</guid>
      <description>


&lt;div id=&#34;using-highcharts-for-number-series&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Using HighCharts for Number Series&lt;/h1&gt;
&lt;p&gt;After watching a few of the Numberphile videos with Neil Sloane I decided to replicate a few of them in HighCharts. You can see the video I really dove into here &lt;a href=&#34;https://youtu.be/pAMgUB51XZA&#34; class=&#34;uri&#34;&gt;https://youtu.be/pAMgUB51XZA&lt;/a&gt;. The two series I wanted to replicate are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://oeis.org/A133058&#34; class=&#34;uri&#34;&gt;https://oeis.org/A133058&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oeis.org/A265326&#34; class=&#34;uri&#34;&gt;https://oeis.org/A265326&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;the-a133058-series&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The A133058 Series&lt;/h2&gt;
This looks a lot like random noise with maybe a sort of curved growth pattern.
&lt;div id=&#34;chartA133058_random&#34; style=&#34;height: 400px; min-width: 310px&#34;&gt;

&lt;/div&gt;
&lt;script src=&#34;https://code.highcharts.com/stock/highstock.js&#34;&gt;&lt;/script&gt;
..until x = 638:
&lt;div id=&#34;chartA133058&#34; style=&#34;height: 400px; min-width: 310px&#34;&gt;

&lt;/div&gt;
&lt;p&gt;The graph is created by iterating over x N times and calling:&lt;/p&gt;
&lt;pre class=&#34;javascript&#34;&gt;&lt;code&gt;function gcd(a, b) {
  if (b === 0) return a;
  return gcd(b, a % b);
}

function isCoprime(a, b) {
  if (typeof a !== &amp;#39;number&amp;#39; || typeof b !== &amp;#39;number&amp;#39;) {
    throw new TypeError(&amp;#39;Expected a number&amp;#39;);
  }

  return gcd(a, b) === 1;
}
for (i = 2; i &amp;lt;= N; i += 1) {
  if (isCoprime(i, previousY) === true) {
    dataY = previousY + i + 1;
  } else {
    dataY = previousY / gcd(previousY, i);
  }
  data.push([i, Math.log(dataY)]);
  previousY = dataY;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-a265326-series&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The A265326 Series&lt;/h2&gt;
This one, to me, has a cool forced perspective effect. The polygon is repeated and increases in scale.
&lt;div id=&#34;chartA265326&#34; style=&#34;height: 400px; min-width: 310px&#34;&gt;

&lt;/div&gt;
&lt;p&gt;The graph is created by iterating over x N times and calling:&lt;/p&gt;
&lt;pre class=&#34;javascript&#34;&gt;&lt;code&gt;const isPrime = num =&amp;gt; {
    for(let i = 2, s = Math.sqrt(num); i &amp;lt;= s; i++)
        if(num % i === 0) return false; 
    return num &amp;gt; 1;
}

function reversePrimes(a) {
    xBin = a.toString(2);
    var b = parseInt(xBin.split(&amp;#39;&amp;#39;).reverse().join(&amp;#39;&amp;#39;), 2 );

    return b;
}

for (i = 0; i &amp;lt;= 100000; i += 1) {
  if (isPrime(i) === true) {
    dataY = i - reversePrimes(i);
    data.push([i, dataY]);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;script language=&#34;javascript&#34;&gt;
function gcd(a, b) {
  if (b === 0) return a;
  return gcd(b, a % b);
}

function isCoprime(a, b) {
  if (typeof a !== &#39;number&#39; || typeof b !== &#39;number&#39;) {
    throw new TypeError(&#39;Expected a number&#39;);
  }

  return gcd(a, b) === 1;
}

Highcharts.chart(&#39;chartA133058_random&#39;, {
  chart: {
    type: &#39;scatter&#39;,
        zoomType: &#39;x&#39;
  },
  title: {
    text: null
  },
  legend: {
    enabled: false
  },
  series: [{
    name: &#39;A133058&#39;,
    turboThreshold: 1000,
    marker: {
      radius: 2
    },
    data: (function() {
      var data = [],
        i,
        previousY = 1;

      for (i = 2; i &lt;= 500; i += 1) {
        if (isCoprime(i, previousY) === true) {
          dataY = previousY + i + 1;
        } else {
          dataY = previousY / gcd(previousY, i);
        }

        data.push([i, Math.log(dataY)]);
        previousY = dataY;
      }

      return data;
    }())
  }]
});

Highcharts.chart(&#39;chartA133058&#39;, {
  chart: {
    type: &#39;scatter&#39;,
        zoomType: &#39;x&#39;
  },
  title: {
    text: null
  },
  legend: {
    enabled: false
  },
  xAxis: {
    plotLines: [{
      color: &#39;#FF0000&#39;,
      width: 2,
      value: 638,
            label: {
                text: &#39;This is weird&#39;
            }
    }]
  },
  series: [{
    name: &#39;A133058&#39;,
    turboThreshold: 1000,
    marker: {
      radius: 2
    },
    data: (function() {
      var data = [],
        i,
        previousY = 1;

      for (i = 2; i &lt;= 1000; i += 1) {
        if (isCoprime(i, previousY) === true) {
          dataY = previousY + i + 1;
        } else {
          dataY = previousY / gcd(previousY, i);
        }

        data.push([i, Math.log(dataY)]);
        previousY = dataY;
      }

      return data;
    }())
  }]
});

const isPrime = num =&gt; {
    for(let i = 2, s = Math.sqrt(num); i &lt;= s; i++)
        if(num % i === 0) return false; 
    return num &gt; 1;
}


function reversePrimes(a) {
    xBin = a.toString(2);
    var b = parseInt(xBin.split(&#39;&#39;).reverse().join(&#39;&#39;), 2 );

    return b;
}

Highcharts.chart(&#39;chartA265326&#39;, {
  chart: {
    type: &#39;scatter&#39;,
        zoomType: &#39;x&#39;
  },
  title: {
    text: null
  },
  legend: {
    enabled: false
  },
  series: [{
    name: &#39;A265326&#39;,
    marker: {
      radius: 2
    },
        turboThreshold: 1000,
    data: (function() {
      var data = [],
        i;

      for (i = 0; i &lt;= 100000; i += 1) {
        if (isPrime(i) === true) {
                    dataY = i - reversePrimes(i);
            data.push([i, dataY]);
        }
      }

      return data;
    }())
  }]
});
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
